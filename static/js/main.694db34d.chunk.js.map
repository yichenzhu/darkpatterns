{"version":3,"sources":["RatingDataModel.tsx","RateCats.tsx","App.js","reportWebVitals.js","index.js"],"names":["ratingDB","require","filename","autoload","RateCats","useState","ratingHistory","setRatingHistory","useEffect","find","err","docs","className","name","initialValues","subscribe","onFinish","values","console","log","current","Date","insert","timestamp","toLocaleString","doc","_id","map","i","imgUrl","process","Item","style","textAlign","src","alt","width","marginBottom","label","rules","required","message","valuePropName","noStyle","type","htmlType","orientation","bordered","margin","dataSource","renderItem","item","Text","mark","marginRight","cat1","cat2","cat3","cat4","cat5","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAKeA,G,OAFE,IADCC,EAAQ,KACT,CAAc,CAAEC,SAAU,cAAeC,UAAU,K,QCuFrDC,EApFE,WAAO,IAAD,EACqBC,mBAAgB,IADrC,mBACdC,EADc,KACCC,EADD,KAGrBC,qBAAU,WACRR,EAASS,KAAK,IAAK,SAAUC,EAAUC,GACrCJ,EAAiBI,QAGlB,IAiCH,OACE,qCACE,wBAAQC,UAAU,aAAlB,SACE,kDAEF,eAAC,IAAD,CACEC,KAAK,cACLD,UAAU,cACVE,cAAe,CACbC,WAAW,GAEbC,SA1CW,SAACC,GAChBC,QAAQC,IAAI,4BAA6BF,GACzC,IAAMG,EAAU,IAAIC,KACpBrB,EAASsB,OAAT,2BAAoBL,GAApB,IAA4BM,UAAWH,EAAQI,oBAAmB,SAASd,EAAUe,GACnFP,QAAQC,IAAI,WAAYM,EAAK,UAAWA,EAAIC,SAgC5C,UA3BK,CAAC,EAAE,EAAE,EAAE,EAAE,GAAGC,KAAI,SAACC,GACtB,IAAMC,EAASC,gBAAA,cAAgCF,EAAhC,QACf,OACE,eAAC,IAAKG,KAAN,CAAmBC,MAAO,CAACC,UAAW,QAAtC,UAEE,qBAAaC,IAAKL,EAAQM,IAAG,aAAQP,GAAKI,MAAO,CAACI,MAAO,QAASC,aAAc,QAAtET,GACV,cAAC,IAAKG,KAAN,CAAWlB,KAAI,aAAQe,GAAKU,MAAO,UACjCC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0BAJf,SAQE,cAAC,IAAD,QAXYb,MAiChB,cAAC,IAAKG,KAAN,CAAWC,MAAO,CAACC,UAAW,QAA9B,SACE,cAAC,IAAKF,KAAN,CAAWlB,KAAK,YAAY6B,cAAc,UAAUC,SAAO,EAA3D,SACE,cAAC,IAAD,oFAGJ,cAAC,IAAKZ,KAAN,CAAWC,MAAO,CAACC,UAAW,QAA9B,SACE,cAAC,IAAD,CAAQW,KAAK,UAAUC,SAAS,SAAhC,yBAKJ,cAAC,IAAD,CAASC,YAAY,OAArB,iCACA,cAAC,IAAD,CAGEC,UAAQ,EAACf,MAAO,CAACgB,OAAQ,OAAQZ,MAAO,OACxCa,WAAY3C,EACZ4C,WAAY,SAAAC,GAAI,OACd,eAAC,IAAKpB,KAAN,CAAWC,MAAO,CAACC,UAAW,QAA9B,UACE,eAAC,IAAWmB,KAAZ,CAAiBC,MAAI,EAACrB,MAAO,CAACsB,YAAa,QAA3C,cAAsDH,EAAK5B,UAA3D,OADF,gBAEY4B,EAAKI,KAFjB,mBAEgCJ,EAAKK,KAFrC,mBAEoDL,EAAKM,KAFzD,mBAEwEN,EAAKO,KAF7E,mBAE4FP,EAAKQ,YAIrG,qBAAK3B,MAAO,CAAC4B,OAAQ,cC1EZC,MARf,WACE,OACE,qBAAKjD,UAAU,MAAf,SACE,cAAC,EAAD,OCMSkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.694db34d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Datastore = require(\"nedb\");\nconst ratingDB = new Datastore({ filename: \"./rating.db\", autoload: true });\n\nexport default ratingDB;\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Button, Checkbox, Form, List, Rate, Typography, Divider } from 'antd';\nimport 'antd/dist/antd.css';\nimport ratingDB from './RatingDataModel';\n\nconst RateCats = () => {\n  const [ratingHistory, setRatingHistory] = useState<any[]>([]);\n\n  useEffect(() => {\n    ratingDB.find({ }, function (err: any, docs: any[]) {\n      setRatingHistory(docs);\n      // console.log('docs: ', docs);\n    });\n  }, [])\n\n  const onSubmit = (values: any[]) => {\n    console.log('Received values of form: ', values);\n    const current = new Date();\n    ratingDB.insert({...values, timestamp: current.toLocaleString()}, function(err: any, doc: any) {\n      console.log('Inserted', doc, 'with ID', doc._id);\n    });\n  };\n\n  const listCats = () => {\n    return [1,2,3,4,5].map((i: number) => {\n      const imgUrl = process.env.PUBLIC_URL + `/Cat${i}.jpg`;\n      return (\n        <Form.Item key={i} style={{textAlign: 'left'}}>\n          {/* <div style={{display: 'flex', flexDirection: 'column', margin: '8px 8px', textAlign: 'left'}}> */}\n          <img key={i} src={imgUrl} alt={`Cat${i}`} style={{width: '480px', marginBottom: '8px'}} />\n          <Form.Item name={`cat${i}`} label={'Rating:'}\n            rules={[\n              {\n                required: true,\n                message: 'Please rate this cat!',\n              },\n            ]}\n          >\n            <Rate/>\n          </Form.Item>\n          {/* </div> */}\n        </Form.Item>\n      );\n    });\n  }\n\n  return (\n    <>\n      <header className=\"App-header\">\n        <p>Rate some cats!</p>\n      </header>\n      <Form\n        name=\"rating-cats\"\n        className=\"rating-form\"\n        initialValues={{\n          subscribe: false,\n        }}\n        onFinish={onSubmit}\n      >\n        {listCats()}\n        <Form.Item style={{textAlign: 'left'}}>\n          <Form.Item name=\"subscribe\" valuePropName=\"checked\" noStyle>\n            <Checkbox>Subscribe to our mailing list to get updates to your email inbox.</Checkbox>\n          </Form.Item>\n        </Form.Item>\n        <Form.Item style={{textAlign: 'left'}}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n      <Divider orientation=\"left\">Historical Ratings:</Divider>\n      <List\n        // header={<div>Header</div>}\n        // footer={<div>Footer</div>}\n        bordered style={{margin: '20px', width: '80%'}}\n        dataSource={ratingHistory}\n        renderItem={item => (\n          <List.Item style={{textAlign: 'left'}}>\n            <Typography.Text mark style={{marginRight: '10px'}}>[{item.timestamp}]</Typography.Text>\n            {`Cat1: ${item.cat1}, Cat2: ${item.cat2}, Cat3: ${item.cat3}, Cat4: ${item.cat4}, Cat5: ${item.cat5}`}\n          </List.Item>\n        )}\n      />\n      <div style={{height: '40px'}}></div>\n    </>\n  );\n}\n\nexport default RateCats;\n","import './App.css';\nimport RateCats from './RateCats';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RateCats />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}